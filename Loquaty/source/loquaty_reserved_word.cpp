
#include <loquaty.h>

using namespace	Loquaty ;


// 予約語
const Symbol::ReservedWordDesc
	Symbol::s_ReservedWordDescs[Symbol::rwiReservedWordCount] =
{
	{	rwiImport,			L"@import"		},
	{	rwiInclude,			L"@include"		},
	{	rwiError,			L"@error"		},
	{	rwiTodo,			L"@todo"		},
	{	rwiClass,			L"class"		},
	{	rwiStruct,			L"struct"		},
	{	rwiNamespace,		L"namespace"	},
	{	rwiTypeDef,			L"typedef"		},
	{	rwiFunction,		L"function"		},
	{	rwiExtends,			L"extends"		},
	{	rwiImplements,		L"implements"	},
	{	rwiFor,				L"for"			},
	{	fwiIn,				L"in"			},
	{	fwiForever,			L"forever"		},
	{	rwiWhile,			L"while"		},
	{	rwiDo,				L"do"			},
	{	rwiIf,				L"if"			},
	{	rwiElse,			L"else"			},
	{	rwiSwitch,			L"switch"		},
	{	rwiCase,			L"case"			},
	{	rwiDefault,			L"default"		},
	{	rwiBreak,			L"break"		},
	{	rwiContinue,		L"continue"		},
	{	rwiGoto,			L"goto"			},
	{	rwiTry,				L"try"			},
	{	rwiCatch,			L"catch"		},
	{	rwiFinally,			L"finally"		},
	{	rwiThrow,			L"throw"		},
	{	rwiReturn,			L"return"		},
	{	rwiWith,			L"with"			},
	{	rwiOperator,		L"operator"		},
	{	rwiSynchronized,	L"synchronized",	LType::modifierSynchronized	},
	{	rwiStatic,			L"static",			LType::modifierStatic		},
	{	rwiAbstract,		L"abstract",		LType::modifierAbstract		},
	{	rwiNative,			L"native",			LType::modifierNative		},
	{	rwiConst,			L"const",			LType::modifierConst		},
	{	rwiFetchAddr,		L"fetch_addr",		LType::modifierFetchAddr	},
	{	rwiPublic,			L"public",			LType::modifierPublic		},
	{	rwiProtected,		L"protected",		LType::modifierProtected	},
	{	rwiPrivate,			L"private",			LType::modifierPrivate		},
	{	rwiOverride,		L"@override",		LType::modifierOverride		},
	{	rwiDeprecated,		L"@deprecated",		LType::modifierDeprecated	},
	{	rwiAuto,			L"auto"			},
	{	rwiVoid,			L"void"			},
	{	rwiBoolean,			L"boolean",			LType::typeBoolean	},
	{	rwiByte,			L"byte",			LType::typeInt8		},
	{	rwiUbyte,			L"ubyte",			LType::typeUint8	},
	{	rwiShort,			L"short",			LType::typeInt16	},
	{	rwiUshort,			L"ushort",			LType::typeUint16	},
	{	rwiInt,				L"int",				LType::typeInt32	},
	{	rwiUint,			L"uint",			LType::typeUint32	},
	{	rwiLong,			L"long",			LType::typeInt64	},
	{	rwiUlong,			L"ulong",			LType::typeUint64	},
	{	rwiFloat,			L"float",			LType::typeFloat	},
	{	rwiDouble,			L"double",			LType::typeDouble	},
	{	rwiInt8,			L"int8",			LType::typeInt8	},
	{	rwiUint8,			L"uint8",			LType::typeUint8	},
	{	rwiInt16,			L"int16",			LType::typeInt16	},
	{	rwiUint16,			L"uint16",			LType::typeUint16	},
	{	rwiInt32,			L"int32",			LType::typeInt32	},
	{	rwiUint32,			L"uint32",			LType::typeUint32	},
	{	rwiInt64,			L"int64",			LType::typeInt64	},
	{	rwiUint64,			L"uint64",			LType::typeUint64	},
	{	rwiThis,			L"this"			},
	{	rwiSuper,			L"super"		},
	{	rwiGlobal,			L"global"		},
	{	rwiNull,			L"null"			},
	{	rwiFalse,			L"false"		},
	{	rwiTrue,			L"true"			},
} ;

